package geppetto.Sloan_test_1_10000.hnb.dao.mysql;

import java.util.ArrayList;
import java.util.List;
import java.util.HashMap;
import java.util.Map;

import javax.annotation.Resource;
import javax.sql.DataSource;

import org.apache.commons.logging.Log;
import org.apache.commons.logging.LogFactory;
import org.springframework.beans.factory.annotation.Value;
import org.springframework.jdbc.core.namedparam.MapSqlParameterSource;
import org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate;
import org.springframework.stereotype.Repository;
import org.springframework.jdbc.support.GeneratedKeyHolder;
import org.springframework.jdbc.support.KeyHolder;



import geppetto.Sloan_test_1_10000.hnb.domain.core.People_test;
import geppetto.Sloan_test_1_10000.hnb.domain.core.GpUser;
import geppetto.Sloan_test_1_10000.hnb.dao.mysql.support.People_test.People_testMapper;
import geppetto.Sloan_test_1_10000.hnb.dao.mysql.support.People_test.People_testInsertMapper;
import geppetto.Sloan_test_1_10000.hnb.dao.mysql.support.People_test.People_testUpdateMapper;


/**
 * 
 * @author Geppetto Generated Code</br>
 * Date Created: </br>
 * @since  </br>
 * build:   </p> 
 *
 * code was generated by the Geppetto System </br>
 * Gepppetto system Copyright - Geppetto LLC 2014 - 2015</br>
 * The generated code is free to use by anyone</p>
 *
 *
 *
*/
@Repository("First_time_setupDao")
public class First_time_setupDao   {

	private Log log = LogFactory.getLog(getClass());
	private DataSource dataSource;


	private NamedParameterJdbcTemplate namedParameterJdbcTemplate;

	private People_testUpdateMapper People_test_update_mapper;
	private People_testInsertMapper People_test_insert_mapper;

    @Resource(name="dataSource")
    public void setDataSource(DataSource dataSource) {
    	this.dataSource = dataSource;



    	this.namedParameterJdbcTemplate = new NamedParameterJdbcTemplate(dataSource);
    	this.People_test_update_mapper = new People_testUpdateMapper(this.dataSource);
	    this.People_test_insert_mapper = new People_testInsertMapper(this.dataSource);
    }

    public DataSource getDataSource() {
        return dataSource;
    }



}